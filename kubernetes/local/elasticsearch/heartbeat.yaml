apiVersion: v1
kind: ServiceAccount
metadata:
  name: heartbeat
  namespace: production
  labels:
    k8s-app: heartbeat
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: heartbeat
  labels:
    k8s-app: heartbeat
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - namespaces
      - pods
      - services
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources:
      - replicasets
    verbs: ["get", "list", "watch"]
  - apiGroups: ["batch"]
    resources:
      - jobs
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: heartbeat
  namespace: production
  labels:
    k8s-app: heartbeat
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs: ["get", "create", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: heartbeat-kubeadm-config
  namespace: production
  labels:
    k8s-app: heartbeat
rules:
  - apiGroups: [""]
    resources:
      - configmaps
    resourceNames:
      - kubeadm-config
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: heartbeat
subjects:
  - kind: ServiceAccount
    name: heartbeat
    namespace: production
roleRef:
  kind: ClusterRole
  name: heartbeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: heartbeat
  namespace: production
subjects:
  - kind: ServiceAccount
    name: heartbeat
    namespace: production
roleRef:
  kind: Role
  name: heartbeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: heartbeat-kubeadm-config
  namespace: production
subjects:
  - kind: ServiceAccount
    name: heartbeat
    namespace: production
roleRef:
  kind: Role
  name: heartbeat-kubeadm-config
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: heartbeat-deployment-config
  namespace: production
  labels:
    k8s-app: heartbeat
data:
  heartbeat.yml: |-
    heartbeat.monitors:
      - type: http
        id: tasker-api-gateway
        name: Tasker API Gateway Service
        schedule: '@every 5s'
        hosts: ["http://tasker-gateway.production.svc.cluster.local:8001/gateway-health"]
        check.request.method: GET
        check.response.status: [200]

      - type: http
        id: tasker-notification
        name: Tasker Notification Service
        schedule: '@every 5s'
        hosts: ["http://tasker-notification.production.svc.cluster.local:8002/notification-health"]
        check.request.method: GET
        check.response.status: [200]

      - type: http
        id: tasker-auth
        name: Tasker Auth Service
        schedule: '@every 5s'
        hosts: ["http://tasker-auth.production.svc.cluster.local:8003/auth-health"]
        check.request.method: GET
        check.response.status: [200]

    processors:
    - add_cloud_metadata: ~
    - add_docker_metadata: ~

    monitoring.enabled: true

    # cloud.id: ${ELASTIC_CLOUD_ID}
    # cloud.auth: ${ELASTIC_CLOUD_AUTH}

    output.elasticsearch:
      hosts: ['${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}']
      username: ${ELASTICSEARCH_USERNAME}
      password: ${ELASTICSEARCH_PASSWORD}
---
# Deploy singleton instance in the whole cluster for some unique data sources, like kube-state-metrics
apiVersion: apps/v1
kind: Deployment
metadata:
  name: heartbeat
  namespace: production
  labels:
    k8s-app: heartbeat
spec:
  selector:
    matchLabels:
      k8s-app: heartbeat
  template:
    metadata:
      labels:
        k8s-app: heartbeat
    spec:
      serviceAccountName: heartbeat
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: heartbeat
          image: docker.elastic.co/beats/heartbeat:8.12.1
          args: ["-c", "/usr/share/heartbeat/heartbeat.yml", "-e"]
          env:
            - name: ELASTICSEARCH_PORT
              value: "9200"
            - name: ELASTICSEARCH_HOST
              value: tasker-elastic.production.svc.cluster.local
            - name: ELASTICSEARCH_USERNAME
              value: elastic
            - name: ELASTICSEARCH_PASSWORD
              value: tasker
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            runAsUser: 0
          resources:
            limits:
              memory: 1536Mi
              cpu: 2000m
            requests:
              cpu: 100m
              memory: 150Mi
          volumeMounts:
            - name: config
              mountPath: /usr/share/heartbeat/heartbeat.yml
              readOnly: true
              subPath: heartbeat.yml
            - name: data
              mountPath: /usr/share/heartbeat/data
      volumes:
        - name: config
          configMap:
            defaultMode: 0600
            name: heartbeat-deployment-config
        - name: data
          hostPath:
            path: /var/lib/heartbeat-data
            type: DirectoryOrCreate

---

