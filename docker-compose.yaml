services:
  redis:
    container_name: redis
    image: redis:7.2-alpine
    restart: always
    command: redis-server --loglevel warning
    volumes:
      - ./volumns/redis:/data
    ports:
      - "6379:6379"
    networks:
      - tasker

  postgres_auth:
    container_name: postgres_auth
    image: postgres:16.1-alpine
    restart: always
    environment:
      POSTGRES_DB: tasker_auth
      POSTGRES_USER: tasker
      POSTGRES_PASSWORD: tasker
    volumes:
      - ./volumns/postgres-auth:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - tasker

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13-rc-management-alpine
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: tasker
      RABBITMQ_DEFAULT_PASS: tasker
    volumes:
      - ./volumns/rabbitmq:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - tasker

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    restart: always
    environment:
      ES_JAVA_OPTS: -Xmx1g -Xms1g
      bootstrap.memory_lock: true
      discovery.type: single-node
      network.host: 0.0.0.0
      transport.host: 127.0.0.1
      http.host: 0.0.0.0
      xpack.security.enabled: true
      xpack.security.authc.api_key.enabled: true
      xpack.monitoring.collection.enabled: true
      xpack.security.enrollment.enabled: true
      xpack.security.authc.token.enabled: true
      ELASTIC_PASSWORD: tasker
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9200/_cluster/health",
          "-u",
          "elastic:tasker",
        ]
      interval: 5s
      timeout: 10s
      retries: 5
    volumes:
      - ./volumns/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - tasker
      - elastic
    # curl -s -X POST -u elastic:tasker -H "Content-Type:application/json" http://localhost:9200/_security/user/kibana_system/_password -d "{\"password\":\"kibana\"}"

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.12.1
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=kibana
      - ELASTICSEARCH_SERVICEACCOUNT_TOKEN=AAEAAWVsYXN0aWMva2liYW5hL3Rhc2tlci1raWJhbmE6bFhzZ3hmXzVRLXF0QVJmeUNFd1g4QQ
      - XPACK_FLEET_AGENTS_ELASTICSEARCH_HOSTS=["http://elasticsearch:9200"]
    volumes:
      - ./config/kibana.yaml:/usr/share/kibana/config/kibana.yml
    depends_on:
      elasticsearch:
        condition: service_healthy
        restart: true
    ports:
      - "5601:5601"
    networks:
      - tasker
      - elastic

  metricbeat:
    container_name: metricbeat
    image: docker.elastic.co/beats/metricbeat:8.12.1
    user: root
    ports:
      - 5066:5066
    volumes:
      - ./config/metricbeat.yaml:/usr/share/metricbeat/metricbeat.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /proc:/hostfs/proc:ro
      - /:/hostfs:ro
    command: ["--strict.perms=false", "-system.hostfs=/hostfs"]
    depends_on:
      elasticsearch:
        condition: service_healthy
        restart: true
    networks:
      - elastic
      - tasker

  heartbeat:
    container_name: heartbeat
    image: docker.elastic.co/beats/heartbeat:8.12.1
    user: root
    hostname: heartbeat
    cap_add:
      - NET_RAW
    command: ["--strict.perms=false"]
    volumes:
      - ./config/heartbeat.yaml:/usr/share/heartbeat/heartbeat.yml:ro
    depends_on:
      elasticsearch:
        condition: service_healthy
        restart: true
    networks:
      - elastic
      - tasker

  apmServer:
    container_name: apmServer
    image: docker.elastic.co/apm/apm-server:8.12.1
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana:5601
        -E apm-server.kibana.protocol=http
        -E strict.perms=false
        -E apm-server.auth.anonymous.enabled=true
    ports:
      - 8200:8200
    volumes:
      - ./config/apm-server.yaml:/usr/share/apm-server/apm-server.yml:ro
    depends_on:
      elasticsearch:
        condition: service_healthy
        restart: true
    networks:
      - elastic
      - tasker

  gateway:
    container_name: gateway
    build:
      context: ./backend/1-gateway
      dockerfile: dockerfile.dev
      secrets:
        - npmrc
    restart: always
    env_file:
      - path: ./backend/1-gateway/.env
        required: true
    environment:
      - ELASTIC_SEARCH_URL=http://elastic:tasker@elasticsearch:9200
      - AUTH_BASE_URL=http://auth:8000
      - REDIS_HOST=redis://redis:6379
      - ELASTIC_APM_SERVER_URL=http://apmServer:8200
    ports:
      - "8001:8000"
    depends_on:
      elasticsearch:
        condition: service_healthy
        restart: true
    networks:
      - tasker

  notification:
    container_name: notification
    build:
      context: ./backend/2-notification
      dockerfile: dockerfile.dev
      secrets:
        - npmrc
    restart: always
    env_file:
      - path: ./backend/2-notification/.env
        required: true
    environment:
      - ELASTIC_SEARCH_URL=http://elastic:tasker@elasticsearch:9200
      - RABBITMQ_ENDPOINT=amqp://tasker:tasker@rabbitmq:5672
      - ELASTIC_APM_SERVER_URL=http://apmServer:8200
    ports:
      - "8002:8000"
    depends_on:
      elasticsearch:
        condition: service_healthy
        restart: true
    networks:
      - tasker

  auth:
    container_name: auth
    build:
      context: ./backend/3-auth
      dockerfile: dockerfile.dev
      secrets:
        - npmrc
    restart: always
    env_file:
      - path: ./backend/3-auth/.env
        required: true
    environment:
      - ELASTIC_SEARCH_URL=http://elastic:tasker@elasticsearch:9200
      - RABBITMQ_ENDPOINT=amqp://tasker:tasker@rabbitmq:5672
      - DATABASE_HOST=postgres_auth
      - DATABASE_PORT=5432
      - ELASTIC_APM_SERVER_URL=http://apmServer:8200
    ports:
      - "8003:8000"
    depends_on:
      elasticsearch:
        condition: service_healthy
        restart: true
    networks:
      - tasker

networks:
  tasker:
  elastic:

secrets:
  npmrc:
    file: npmrc
